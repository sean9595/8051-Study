C51 COMPILER V9.60.0.0   MAIN                                                              04/02/2020 17:48:47 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          *Project name: PWM
   3          *File name: main.c
   4          *Author: Sean Kim
   5          *Date: 03.31.20
   6          *Edited: 04.02.20
   7          */
   8          
   9          #include <main.h>
  10          #include <at89x52.h>
  11          
  12          /*Pin definition*/
  13          sbit PWM_out = P0^0; // 
  14          
  15          /*Flag definition*/
  16          bit PWM_High_flag = 0;
  17          bit PWM_int_flag_High = 0;
  18          bit PWM_int_flag_Low = 0;
  19          
  20          /*typedef unsigned short = uint16_t;*/
  21          unsigned short period = 20000; //unit: us (valid range: 0~65535)
  22          unsigned char duty = 20; //unit: percentage
  23          unsigned short CCR_01 = 0;
  24          unsigned short CCR_02 = 0;
  25          
  26          void main()
  27          {
  28   1        
  29   1        CCR_01 = (65536 - ((65536 - period)*(duty/100)));
  30   1        //  CCR_02 = (65536 - ((65536 - period)*((100-duty)/100)));
  31   1        CCR_02 = period - CCR_01;
  32   1        
  33   1        TMOD = 0x01; //GATE = 0, C/T = 0, Timer/counter mode 1
  34   1        TF0 = 0; // Timer/counter 0 interrupt flag clear
  35   1        TL0 =  0;
  36   1        TH0 =  0; 
  37   1        IE = 0x82; // IE -> interrupt enable reg. Timer interrupt enables & entire interrupt enable.
  38   1        IP = 0x02; // IP -> interrupt priority. Set timer interrupt 0 as the highest priority. 
  39   1                   // Should have to consider which register(btw IE & IP) comes first. 
  40   1        
  41   1        TR0 = 1; // Timer interrupt 0 RUN.
  42   1        while(1)
  43   1        {
  44   2        if(PWM_int_flag_High)
  45   2        {
  46   3          PWM_out = 1;
  47   3          PWM_int_flag_High = 0;
  48   3        }
  49   2        
  50   2        else if(PWM_int_flag_Low)
  51   2        {
  52   3          PWM_out = 0;
  53   3          PWM_int_flag_Low = 0;
  54   3        }
C51 COMPILER V9.60.0.0   MAIN                                                              04/02/2020 17:48:47 PAGE 2   

  55   2        }
  56   1      }
  57          
  58          void PWM_int() interrupt 1 // void [user name]() interrupt [vector num.]
  59          {
  60   1        if(PWM_High_flag == 0)
  61   1        {
  62   2          PWM_int_flag_High = 1;
  63   2          PWM_High_flag = 1;
  64   2          TL0 = ((CCR_01>>8) & 0xff);
  65   2          TH0 = (CCR_01 & 0xff);
  66   2        }
  67   1        
  68   1        else
  69   1        {
  70   2          PWM_int_flag_Low = 1;
  71   2          PWM_High_flag = 0;
  72   2          TL0 = ((CCR_02>>8) & 0xff);
  73   2          TH0 = (CCR_02 & 0xff);
  74   2        }
  75   1          
  76   1        EA = 1; // Interrupt enables
  77   1        return;
  78   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    132    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
